"$schema" = "https://pixi.sh/latest/schema/manifest/schema.json"

[workspace]
name = "meso-forge"
version = "0.1.0"
description = "Packages needed by my projects"
authors = [
  "Wolf Vollprecht <w.vollprecht@gmail.com>", 
  "Fred Eisele <fred.eisele@vanderbilt.edu>"]
channels = ["conda-forge"]
platforms = [
  # "osx-arm64", 
  "linux-64", 
  # "win-64", 
  # "osx-64",
  ]
preview = ["pixi-build"]

[dependencies]
rattler-build = ">=0.40.0,<0.41"
nushell = ">=0.103.0,<0.104"

[tasks.clean-the]
args =  [
  { arg = "pkg", default = "_skeleton_python" },
  { arg = "tgt_platform", default = "linux-64" },
]
cmd = ["rm", "pkgs-out/*/{{ pkg }}*.conda"]

[tasks.clean]
cmd = ["rm", "-rf", "pkgs-out"]


[tasks.build-the]
args =  [
  { arg = "pkg", default = "_skeleton_python" },
  { arg = "tgt_platform", default = "linux-64" },
]
cmd = [
  "rattler-build", "build",
  "--recipe-dir", "./pkgs/{{ pkg }}",
  "--output-dir", "./pkgs-out",
  "--skip-existing=all",
  "--target-platform={{ tgt_platform }}",
  "--channel", "https://prefix.dev/meso-forge",
  "--channel", "conda-forge",
  "-vvv",
]

[tasks.build-skeletons]
depends-on = [
  { task = "build-the", args = ["_skeleton_js", "linux-64"] },
  { task = "build-the", args = ["_skeleton_python", "linux-64"] },
  { task = "build-the", args = ["_skeleton_rust", "linux-64"] },
]

[tasks.build]
depends-on = [
  { task = "build-the", args = ["asciidoctor", "linux-64"] },
  { task = "build-the", args = ["asciidoctor-pdf", "linux-64"] },
  { task = "build-the", args = ["asyncio", "linux-64"] },
  { task = "build-the", args = ["bash-preexec", "linux-64"] },
  { task = "build-the", args = ["digitalpy", "linux-64"] },
  { task = "build-the", args = ["dysk", "linux-64"] },
  { task = "build-the", args = ["fd", "linux-64"] },
  { task = "build-the", args = ["flask-jwt-extended", "linux-64"] },
  { task = "build-the", args = ["testresources", "linux-64"] },
  { task = "build-the", args = ["freetakserver", "linux-64"] },
  { task = "build-the", args = ["freetakserver-ui", "linux-64"] },
  { task = "build-the", args = ["fsarchiver", "linux-64"] },
  { task = "build-the", args = ["node-red", "linux-64"] },
  { task = "build-the", args = ["node-red-worldmap", "linux-64"] },
  { task = "build-the", args = ["pwgen", "linux-64"] },
  { task = "build-the", args = ["ratatui", "linux-64"] },
  ]

[tasks.build-wip]
depends-on = [
  { task = "build-the", args = ["asciidoctor-revealjs", "linux-64"] },
  { task = "build-the", args = ["bitwarden-cli", "linux-64"] },
  { task = "build-the", args = ["devcontainer-cli", "linux-64"] },
  { task = "build-the", args = ["iamb", "linux-64"] },
  { task = "build-the", args = ["internxt", "linux-64"] },
  { task = "build-the", args = ["jank", "linux-64"] },
  { task = "build-the", args = ["kombose", "linux-64"] },
  { task = "build-the", args = ["mediamtx", "linux-64"] },
  { task = "build-the", args = ["metashell", "linux-64"] },
  { task = "build-the", args = ["mumble", "linux-64"] },
  { task = "build-the", args = ["neovide", "linux-64"] },
  { task = "build-the", args = ["systemd-pixi-generator", "linux-64"] },
  ]

[tasks.publish-pd]
args =  [
  { arg = "pkg", default = "_skeleton_python" },
  { arg = "tgt_platform", default = "linux-64" },
]
# the upload expects the RATTLER_AUTH_FILE variable to be set
cmd = [
  "rattler-build", "upload", "prefix",
  "--skip-existing", "-vvv",
  "--channel", "meso-forge",
  "pkgs-out/*/{{ pkg }}*.conda",
]
# depends-on = [
#   { task = "build-the", args = ['{{ pkg }}', "linux-64"] },
# ]

[tasks.publish-s3]
args =  [
  { arg = "pkg", default = "_skeleton_python" },
  { arg = "url", default = "https://minio.isis.vanderbilt.edu" },
]
# the upload expects the RATTLER_AUTH_FILE variable to be set
cmd = [
  "rattler-build", "upload", "s3",
  "--channel", "s3://pixi/meso-forge",
  "--region", "auto",
  "--endpoint-url", "{{ url }}",
  "--force-path-style", 
  "-vvv",
  "pkgs-out/*/{{ pkg }}*.conda",
]

# [tasks.publish-s3]
# args =  [
#   { arg = "pkg", default = "_skeleton_python" },
#   { arg = "url", default = "https://minio.isis.vanderbilt.edu" },
# ]
# # the upload expects the RATTLER_AUTH_FILE variable to be set
# cmd = [
#   "rattler-build", "upload", "s3",
#   "--channel", "s3://pixi-local/meso-forge",
#   "--region", "auto",
#   "--endpoint-url", "{{ url }}",
#   "--force-path-style", 
#   "-vvv",
#   "pkgs-out/*/{{ pkg }}*.conda",
# ]


[tasks.index-s3]
args =  [
  { arg = "url", default = "https://minio.isis.vanderbilt.edu" },
]
# the index expects the RATTLER_AUTH_FILE variable to be set
cmd = [
  "rattler-index", "s3",
  "s3://pixi/meso-forge",
  "--endpoint-url", "{{ url }}",
  "--region", "auto",
  "--force-path-style", 
  "||", "true"
]

[tasks.index-s3-local]
depends-on = [
  { task = "index-s3", args = ["http://127.0.0.1"] },
]

[tasks.publish]
depends-on = [
  { task = "publish-s3", args = ["asciidoctor"] },
  { task = "publish-s3", args = ["asciidoctor-pdf"] },
  { task = "publish-s3", args = ["asciidoctor-revealjs"] },
  { task = "publish-pd", args = ["asyncio"] },
  { task = "publish-pd", args = ["bash-preexec"] },
  { task = "publish-s3", args = ["bitwarden-cli"] },
  { task = "publish-s3", args = ["devcontainer-cli"] },
  { task = "publish-pd", args = ["digitalpy"] },
  { task = "publish-s3", args = ["dysk"] },
  { task = "publish-s3", args = ["fd"] },
  { task = "publish-pd", args = ["flask-jwt-extended"] },
  { task = "publish-pd", args = ["testresources"] },
  { task = "publish-pd", args = ["freetakserver"] },
  { task = "publish-pd", args = ["freetakserver-ui"] },
  { task = "publish-s3", args = ["fsarchiver"] },
  { task = "publish-s3", args = ["iamb"] },
  { task = "publish-s3", args = ["internxt"] },
  { task = "publish-s3", args = ["jank"] },
  { task = "publish-s3", args = ["kombose"] },
  { task = "publish-s3", args = ["mediamtx"] },
  { task = "publish-s3", args = ["metashell"] },
  { task = "publish-s3", args = ["mumble"] },
  { task = "publish-s3", args = ["neovide"] },
  { task = "publish-pd", args = ["node-red"] },
  { task = "publish-pd", args = ["node-red-worldmap"] },
  { task = "publish-s3", args = ["pwgen"] },
  { task = "publish-pd", args = ["ratatui"] },
  { task = "publish-s3", args = ["systemd-pixi-generator"] },
  ]


[feature.update-ver.dependencies]
python = "3.12.*"
requests = ">=2.32.3,<3"
pyyaml = ">=6.0.2,<7"
semver = ">=3.0.2,<4"

[feature.update-ver.tasks.update-ver]
cmd = ["python", ".scripts/update-versions.py" ]

[environments.update]
features = ["update-ver"]
