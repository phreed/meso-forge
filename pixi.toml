"$schema" = "https://pixi.sh/v0.36.0/schema/manifest/schema.json"

[project]
name = "meso-forge"
version = "0.1.0"
description = "Packages needed by my projects"
authors = ["Wolf Vollprecht <w.vollprecht@gmail.com>", "Fred Eisele <fred.eisele@vanderbilt.edu>"]
channels = ["conda-forge"]
platforms = ["osx-arm64", "linux-64", "win-64", "osx-64"]

[dependencies]
rattler-build = ">=0.31.1,<0.32"

[feature.update-versions.dependencies]
python = "3.12.*"
requests = ">=2.32.3,<3"
pyyaml = ">=6.0.2,<7"
semver = ">=3.0.2,<4"

[feature.update-versions.tasks]
update-versions = "python .scripts/update-versions.py"

[tasks]
build-all = { cmd = [
  "rattler-build", "build",
  "--recipe-dir", "./packages",
  "--skip-existing=all",
  "--target-platform=$TARGET_PLATFORM",
  "--channel", "https://prefix.dev/meso-forge",
  "--channel", "conda-forge",
  "-vvv",
], env = { TARGET_PLATFORM = 'linux-64' } }

upload-all = { cmd = """
  for (file in output/**/*.conda) { 
    rattler-build upload prefix --channel https://prefix.dev/meso-forge file
  }
""" }

deno-sample = { cmd = """
// parse
let list = deno_task_shell::parser::parse(&text)?;

// execute
let env_vars = HashMap::from(&[
  ("SOME_VAR".to_string(), "value".to_string()),
]);
let cwd = std::env::current_dir()?;

let exit_code = deno_task_shell::execute(
  list,
  env_vars,
  &cwd,
  Default::default(), // custom commands
).await;"}
""" }

[environments]
update-versions = ["update-versions"]
