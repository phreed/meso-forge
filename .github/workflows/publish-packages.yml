name: Publish packages (CI)

# this is important for trusted publishing
permissions:
  id-token: write

on:
  workflow_run:
    workflows: ["Build packages (CI)"]
    types:
      - completed
    branches:
      - packages
  workflow_dispatch:
    inputs:
      run_id:
        description: "Build workflow run ID to download artifacts from"
        required: false
        type: string

jobs:
  publish:
    # Only run if the build workflow was successful or if manually triggered
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.event != 'pull_request')

    strategy:
      matrix:
        include:
          - { target: linux-64, os: ubuntu-24.04 }
          # - { target: win-64, os: windows-latest }
          # - { target: osx-64, os: macos-13 }
          # - { target: osx-arm64, os: macos-14 }
      fail-fast: false

    name: Publish ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.47.0
          cache: true
          log-level: vvv
          run-install: true
          # https://github.com/prefix-dev/setup-pixi?tab=readme-ov-file#token
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}

      - name: Debug workflow run information
        run: |
          echo "=== Workflow Run Debug Information ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Workflow run ID: ${{ github.event.workflow_run.id }}"
          echo "Workflow run conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Manual run ID input: ${{ inputs.run_id }}"
          echo "Using run ID: ${{ inputs.run_id || github.event.workflow_run.id }}"
          echo "Target platform: ${{ matrix.target }}"
          echo "Artifact name: packages-${{ matrix.target }}"
          echo "Repository: ${{ github.repository }}"

      - name: List available artifacts from build run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ inputs.run_id || github.event.workflow_run.id }}
        run: |
          echo "=== Available Artifacts ==="
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts" | \
            jq '.artifacts[] | {name: .name, size_in_bytes: .size_in_bytes, created_at: .created_at}' || echo "Failed to fetch artifacts"

      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          name: packages-${{ matrix.target }}
          path: pkgs-out/
          run_id: ${{ inputs.run_id || github.event.workflow_run.id }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          find pkgs-out -name "*.conda" -type f | head -20
          echo "Total .conda files: $(find pkgs-out -name "*.conda" -type f | wc -l)"

      - name: Publish packages
        env:
          TARGET_PLATFORM: ${{ matrix.target }}
        run: pixi run publish-all

  publish-summary:
    name: Publish Summary
    runs-on: ubuntu-latest
    needs: publish
    if: always()
    steps:
      - name: Check publish results
        run: |
          echo "Publish jobs completed with the following results:"
          echo "Publish job status: ${{ needs.publish.result }}"

          if [[ "${{ needs.publish.result }}" == "failure" ]]; then
            echo "❌ Some publishes failed"
            exit 1
          elif [[ "${{ needs.publish.result }}" == "success" ]]; then
            echo "✅ All packages published successfully"
          else
            echo "⚠️ Publish completed with status: ${{ needs.publish.result }}"
          fi
