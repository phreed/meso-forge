name: Build packages (CI)

# this is important for trusted publishing
permissions:
  id-token: write

on:
  push:
    branches:
      - packages
  workflow_dispatch:
  pull_request:
    branches:
      - packages

jobs:
  build:
    strategy:
      matrix:
        include:
          - { target: linux-64, os: ubuntu-24.04 }
          - { target: linux-aarch64, os: ubuntu-24.04 }
          # - { target: win-64, os: windows-latest }
          # - { target: osx-64, os: macos-13 }
          # - { target: osx-arm64, os: macos-14 }
      fail-fast: false

    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: prefix-dev/setup-pixi@v0.8.10
        with:
          pixi-version: v0.49.0
          cache: true
          # cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
          log-level: vvv
          run-install: true
          # https://github.com/prefix-dev/setup-pixi?tab=readme-ov-file#token
          auth-host: prefix.dev
          auth-token: ${{ secrets.PREFIX_DEV_TOKEN }}

      - name: Build each package
        env:
          TARGET_PLATFORM: ${{ matrix.target }}
        run: pixi run build-for-platform $TARGET_PLATFORM

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.target }}
          path: output/
          retention-days: 30
          include-hidden-files: false
          if-no-files-found: error

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Check build results
        run: |
          echo "Build jobs completed with the following results:"
          echo "Build job status: ${{ needs.build.result }}"

          if [[ "${{ needs.build.result }}" == "failure" ]]; then
            echo "❌ Some builds failed"
            exit 1
          elif [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ All builds completed successfully"
          else
            echo "⚠️ Build completed with status: ${{ needs.build.result }}"
          fi
