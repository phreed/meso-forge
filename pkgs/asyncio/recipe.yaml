# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: 3.4.3

package:
  name: asyncio
  version: ${{ version }}

source:
  url: https://api.github.com/repos/python/asyncio/tarball/refs/tags/3.4.3
  sha256: 016209c887f8d4fbb3c8f7721ccd460dad9765734c457bf87236a859d32de562

build:
  noarch: python
  script: pip install . -v

requirements:
  # there is no build section
  host:
  - pip
  - python >=3.11
  - setuptools
  - wheel
  run:
  - python >=3.11

tests:
  # Test 1: Verify package contents are included
- package_contents:
    files:
        # Python library package
    - site-packages/asyncio/__init__.py

  # Test 2: Python import test
- script:
    interpreter: python
    content: |
      import asyncio

about:
  homepage: https://www.python.org/dev/peps/pep-3156/
  license: Apache-2.0
  license_file: COPYING
  summary: Reference implementation of PEP 3156
  description: |
    This is a proposal for asynchronous I/O in Python 3, starting at Python 3.3.
    Consider this the concrete proposal that is missing from PEP 3153.
    The proposal includes a pluggable event loop, transport and protocol abstractions similar to those in Twisted,
    and a higher-level scheduler based on yield from (PEP 380).
    The proposed package name is asyncio.
  documentation: https://www.python.org/dev/peps/pep-3156/

extra:
  recipe-maintainers:
  - phreed

  version:
    github-tags:
    - ^(\d+\.\d+\.\d+)$
