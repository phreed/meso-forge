# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "2025.5.0"

package:
  name: bitwarden-cli
  version: ${{ version }}

source:
  url: https://api.github.com/repos/bitwarden/clients/tarball/cli-v2025.5.0
  sha256: f48e0d908c31dbce4fb08ed8fb40741889bee89aba0bab9c973194d520c6726d

build:
  number: 0
  noarch: generic
  script:
    interpreter: nu
    content: |
      # Expand the GitHub API tarball which comes as a single file
      let tarball_file = (ls | where type == file and name =~ "\\.tar\\.gz$|^cli-v" | first | get name)
      ^tar -xzf $tarball_file

      # Find the extracted directory (GitHub API tarballs create directories like "bitwarden-clients-abc123")
      let extracted_dir = (ls | where type == dir and name =~ "bitwarden-clients-" | first | get name)

      # Change to the extracted directory
      cd $extracted_dir

      # Remove problematic postinstall script from desktop app
      ^sed -i 's/"postinstall": "electron-rebuild",/"postinstall": "echo Skipping electron-rebuild",/' apps/desktop/package.json

      # Install dependencies following GitHub Actions workflow pattern
      ^npm ci

      # Build CLI app (JavaScript files instead of bundled executable)
      cd apps/cli
      ^npm run build:oss:prod

      # Copy built JavaScript files and dependencies to package
      let lib_dir = ($env.PREFIX | path join "lib" "bitwarden-cli")
      ^mkdir -p $lib_dir
      ^cp -r build/* $lib_dir

      # Copy required node_modules to the package
      cd ../..
      ^cp -r node_modules $lib_dir

      # Create wrapper script that sets NODE_PATH
      let bin_dir = ($env.PREFIX | path join "bin")
      ^mkdir -p $bin_dir
      let wrapper_script = ($bin_dir | path join "bw")

      let script_content = "#!/bin/bash" + "\n" + "export NODE_PATH=\"$PREFIX/lib/bitwarden-cli/node_modules:$NODE_PATH\"" + "\n" + "exec node \"$PREFIX/lib/bitwarden-cli/bw.js\" \"$@\""

      $script_content | save $wrapper_script
      ^chmod +x $wrapper_script

requirements:
  build:
    - nushell
    - tar
    - yarn
    - webpack-cli
  host:
    - nodejs
    - jest

  run:
    - nodejs

tests:
  # Test 1: Verify package contents are included
  - package_contents:
      files:
        # Bitwarden CLI wrapper script
        - ${{ "Library/" if win }}bin/bw${{ ".bat" if win }}
          # JavaScript application files
        - ${{ "Library/" if win }}lib/bitwarden-cli/bw.js
        - ${{ "Library/" if win }}lib/bitwarden-cli/node_modules/.bin/acorn

    # Test 2: Functional tests
  - requirements:
      build:
        - nushell
    script:
      interpreter: nu
      content:
        - ^bw --version

about:
  homepage: https://bitwarden.com/help/cli/
  summary: The Bitwarden command-line interface (CLI)
  description: |
    The Bitwarden command-line interface (CLI) is a powerful,
    fully-featured tool for accessing and managing your vault.
    Most features that you find in other Bitwarden client applications
    (desktop, browser extension, etc.)
    are available from the CLI.
    https://contributing.bitwarden.com/getting-started/clients/cli/
  license: Apache-2.0
  license_file: "*/LICENSE.txt"
  repository: https://github.com/bitwarden/clients/tree/main/apps/cli

extra:
  recipe-maintainers:
    - phreed
  version:
    github-release:
      - ^cli-v(\d+\.\d+\.\d+)
