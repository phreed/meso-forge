# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "10.2.0"

package:
  name: fd
  version: ${{ version }}

source:
  url: https://api.github.com/repos/sharkdp/fd/tarball/refs/tags/v10.2.0
  sha256: 3699949e93baee2a22a4664a2ede8cb94e4fb7ed67feaf768134dfe5bbc9c5df

build:
  number: 0
  script:
    interpreter: nu
    content: |
      ^cargo install --root ($env.PREFIX) --path .

      # Generate completions
      let fd_bin = ($env.PREFIX | path join "bin" "fd")
      ^$fd_bin --gen-completions bash | save fd.bash
      ^$fd_bin --gen-completions fish | save fd.fish

      # Install completions
      let bash_completions_dir = ($env.PREFIX | path join "share" "bash-completion" "completions")
      let fish_completions_dir = ($env.PREFIX | path join "share" "fish" "vendor_completions.d")
      let zsh_completions_dir = ($env.PREFIX | path join "share" "zsh" "site-functions")
      let man_dir = ($env.PREFIX | path join "share" "man" "man1")

      ^mkdir -p $bash_completions_dir
      ^mkdir -p $fish_completions_dir
      ^mkdir -p $zsh_completions_dir
      ^mkdir -p $man_dir

      ^cp fd.bash ($bash_completions_dir | path join "fd")
      ^cp fd.fish ($fish_completions_dir | path join "fd.fish")
      ^cp contrib/completion/_fd ($zsh_completions_dir | path join "_fd")
      ^cp doc/fd.1 ($man_dir | path join "fd.1")

      ^cargo bundle-licenses --format yaml --output thirdpartylicenses.yaml
      # --previous missing-licenses.yaml --check-previous

requirements:
  build:
  - nushell
  - rust
  - cargo-bundle-licenses

tests:
  # Test 1: Verify package contents are included
- package_contents:
    files:
        # fd binary
    - ${{ "Library/" if win }}bin/fd${{ ".exe" if win }}
        # Shell completions
    - ${{ "Library/" if win }}share/bash-completion/completions/fd
    - ${{ "Library/" if win }}share/fish/vendor_completions.d/fd.fish
    - ${{ "Library/" if win }}share/zsh/site-functions/_fd
        # Man page
    - ${{ "Library/" if win }}share/man/man1/fd.1

  # Test 2: Functional tests
- requirements:
    build:
    - nushell
  script:
    interpreter: nu
    content: |
      ^mkdir -p trial
      cd trial
      ^touch foo_file
      ^touch test_file
      let result = (^fd test | str trim)
      if $result != "test_file" { exit 1 }

about:
  homepage: https://github.com/sharkdp/fd
  license: Apache-2.0 OR MIT
  license_file:
  - LICENSE
  - thirdpartylicenses.yaml
  summary: Simple, fast and user-friendly alternative to find
  description: |
    fd is a simple, fast and user-friendly alternative to find.
    While it does not seek to mirror all of find's powerful functionality,
    it provides sensible (opinionated) defaults for 80% of the use cases.

extra:
  recipe-maintainers:
  - phreed

  version:
    github-tags:
    - ^(\d+\.\d+\.\d+)$
