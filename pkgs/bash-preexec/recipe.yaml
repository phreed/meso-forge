# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "0.5.0"

package:
  name: bash-preexec
  version: ${{ version }}

source:
  url: https://github.com/rcaloras/bash-preexec/archive/refs/tags/0.5.0.tar.gz
  sha256: 23c589cd1da209c0598f92fac8d81bb11632ba1b2e68ccaf4ad2c4f3204b877c
  target_directory: bash-preexec-src

build:
  noarch: generic
  script:
    interpreter: nu
    content: |
      let profile_dir = ($env.PREFIX | path join "etc" "profile.d")
      mkdir $profile_dir
      cp bash-preexec-src/bash-preexec.sh $profile_dir
  number: 0

requirements:
  build:
    - nushell

tests:
  # Test 1: Verify package contents are included
  - package_contents:
      files:
        # Bash preexec profile script
        - etc/profile.d/bash-preexec.sh

    # Test 2: Functional test
  - requirements:
      build:
        - nushell
    script:
      interpreter: nu
      content: |
        let bash_preexec_file = ($env.PREFIX | path join "etc" "profile.d" "bash-preexec.sh")
        if not ($bash_preexec_file | path exists) {
          error make {msg: "bash-preexec.sh not found in profile.d directory"}
        }

about:
  homepage: https://github.com/rcaloras/bash-preexec
  license: MIT
  license_file: bash-preexec-src/LICENSE.md
  summary: Preexec and precmd functions for Bash (like Zsh)
  description: |
    bash-preexec.sh is a library that provides preexec and precmd functionality
    in bash that is typically found in zsh. This allows you to execute functions
    before every command, as well as right before the prompt is displayed.

extra:
  recipe-maintainers:
    - phreed

  version:
    github-tags:
      - ^(\d+\.\d+\.\d+)$
