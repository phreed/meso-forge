# yaml-language-server: $schema=https://raw.githubusercontent.com/prefix-dev/recipe-format/main/schema.json
schema_version: 1

context:
  version: "0.13.1"

package:
  name: temporal
  version: ${{ version }}

source:
  url: https://github.com/temporalio/cli/archive/refs/tags/v${{ version }}.tar.gz
  sha256: 9d8812c96d3404490659fec3915dcd23c4142b421ef4cb7e9622bd9a459e1f74

build:
  # The LDFLAGS are used to set the version of the `temporal` binary. This is a common practice in Go.
  # Build the `temporal` binary and store it in the `$PREFIX/bin` directory.
  # Store the license files in a separate directory in the $SRC_DIR.
  # These are embedded in the package in the `license_file` section.
  script:
    interpreter: nu
    content: |
      echo "building sheleton_go!"
      $env.LDFLAGS = ($env.LDFLAGS? | default "" | append $" -s -w -X github.com/temporalio/cli/temporalcli.Version=($env.PKG_VERSION)")
      go build -ldflags $"($env.LDFLAGS)" -o $"($env.PREFIX)/bin/temporal" ./cmd/temporal
      (go-licenses save ./cmd/temporal --save_path=($env.SRC_DIR)/license-files/ | complete | ignore)

requirements:
  build:
    - nushell
    - ${{ compiler('go-nocgo') }}
    - go-licenses

tests:
  - script:
    - temporal --version

about:
  homepage: https://temporal.io
  repository: https://github.com/temporalio/cli
  documentation: https://docs.temporal.io/cli
  summary: Temporal CLI
  description: |
    Command-line interface for running Temporal Server and interacting with
    Workflows, Activities, Namespaces, and other parts of Temporal.
  license: MIT
  license_file:
    - LICENSE
    # These license files are generated at build time in the `build.sh` script
    # from all the dependencies of `temporal.io`.
    - license-files/
